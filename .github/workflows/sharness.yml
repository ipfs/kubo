name: 'ci/gh-experiment: sharness'

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - 'master'

jobs:
  runner:
    if: github.repository == 'ipfs/kubo' || github.event_name == 'workflow_dispatch'
    uses: ipfs/kubo/.github/workflows/runner.yml@master
  sharness:
    needs: [runner]
    runs-on: ${{ fromJSON(needs.runner.outputs.config).labels }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.1
      - name: Checkout Kubo
        uses: actions/checkout@v3
        with:
          path: kubo
      - name: Install missing tools
        run: sudo apt install -y socat net-tools fish libxml2-utils
      - name: Checkout IPFS Pinning Service API
        uses: actions/checkout@v3
        with:
          repository: ipfs-shipyard/rb-pinning-service-api
          ref: 773c3adbb421c551d2d89288abac3e01e1f7c3a8
          path: rb-pinning-service-api
      # TODO: check if docker compose (not docker-compose) is available on default gh runners
      - name: Start IPFS Pinning Service API
        run: |
          (for i in {1..3}; do docker compose pull && break || sleep 5; done) &&
            docker compose up -d
        working-directory: rb-pinning-service-api
      - name: Restore Go Cache
        uses: protocol/cache-go-action@v1
        with:
          name: ${{ github.job }}
      - name: Find IPFS Pinning Service API address
        run: echo "TEST_DOCKER_HOST=$(ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+')" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: test/sharness/lib/dependencies
          key: ${{ runner.os }}-test-generate-junit-html-${{ hashFiles('test/sharness/lib/test-generate-junit-html.sh') }}
      - name: Run Sharness tests
        run: |
          make -O -j "$PARALLEL" \
            test_sharness \
            coverage/sharness_tests.coverprofile \
            test/sharness/test-results/sharness.xml \
            test/sharness/test-results/sharness.html \
            test/sharness/test-results/sharness-html
        working-directory: kubo
        env:
          TEST_NO_DOCKER: 0
          TEST_NO_PLUGIN: 1
          TEST_NO_FUSE: 1
          TEST_VERBOSE: 1
          TEST_JUNIT: 1
          TEST_EXPENSIVE: 1
          IPFS_CHECK_RCMGR_DEFAULTS: 1
          CONTINUE_ON_S_FAILURE: 1
          PARALLEL: ${{ fromJSON(needs.runner.outputs.config).parallel }}
      - name: Upload coverage report
        uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378 # v3.1.0
        if: failure() || success()
        with:
          name: sharness
          files: kubo/coverage/sharness_tests.coverprofile
      - name: Aggregate results
        run: find kubo/test/sharness/test-results -name 't*-*.sh.*.counts' | kubo/test/sharness/lib/sharness/aggregate-results.sh > kubo/test/sharness/test-results/summary.txt
      - name: 👉️ If this step failed, go to «Summary» (top left) → «HTML Report» → inspect the «Failures» column
        run: |
          cat kubo/test/sharness/test-results/summary.txt &&
          grep 'failed\s*0' kubo/test/sharness/test-results/summary.txt
      - name: Add aggregate results to the summary
        if: failure() || success()
        run: |
          echo "# Summary" >> $GITHUB_STEP_SUMMARY
          echo >> $GITHUB_STEP_SUMMARY
          cat kubo/test/sharness/test-results/summary.txt >> $GITHUB_STEP_SUMMARY
      - name: Upload one-page HTML report to S3
        id: one-page
        uses: pl-strflt/tf-aws-gh-runner/.github/actions/upload-artifact@main
        if: fromJSON(needs.runner.outputs.config).aws && (failure() || success())
        with:
          source: kubo/test/sharness/test-results/sharness.html
          destination: sharness.html
      - name: Upload one-page HTML report
        if: (! fromJSON(needs.runner.outputs.config).aws) && (failure() || success())
        uses: actions/upload-artifact@v3
        with:
          name: sharness.html
          path: kubo/test/sharness/test-results/sharness.html
      - name: Upload full HTML report to S3
        id: full
        uses: pl-strflt/tf-aws-gh-runner/.github/actions/upload-artifact@main
        if: fromJSON(needs.runner.outputs.config).aws && (failure() || success())
        with:
          source: kubo/test/sharness/test-results/sharness-html
          destination: sharness-html/
      - name: Upload full HTML report
        if: (! fromJSON(needs.runner.outputs.config).aws) && (failure() || success())
        uses: actions/upload-artifact@v3
        with:
          name: sharness-html
          path: kubo/test/sharness/test-results/sharness-html
      - name: Add S3 links to the summary
        if: fromJSON(needs.runner.outputs.config).aws && (failure() || success())
        run: echo "$MD" >> $GITHUB_STEP_SUMMARY
        env:
          MD: |
            # HTML Reports

            - View the [one page HTML report](${{ steps.one-page.outputs.url }})
            - View the [full HTML report](${{ steps.full.outputs.url }}index.html)
